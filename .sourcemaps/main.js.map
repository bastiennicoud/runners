{"version":3,"sources":["../../src/tokens/api-endpoint.ts","../../src/services/vehicle.service.ts","../../src/services/run.service.ts","../../src/enums/run-status.enum.ts","../../src/pages/login/login.ts","../../src/pages/profil/profil.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/storages/auth.storage.ts","../../src/models/vehicle-category.ts","../../src/enums/vehicle-status.enum.ts","../../src/models/runner.ts","../../src/services/runner.service.ts","../../src/pages/tabs/tabs.ts","../../src/pages/runs/runs.ts","../../src/pages/run/run.ts","../../src/pages/runner/runner.ts","../../src/models/user.ts","../../src/enums/filter-by.enum.ts","../../src/pages/vehicles/vehicles.ts","../../src/pages/vehicle/vehicle.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/runners.config.ts","../../src/services/http.service.ts","../../src/models/vehicle-status.ts","../../src/models/run.ts","../../src/models/waypoint.ts","../../src/app/app.component.ts","../../src/pipes/filter-runs.pipe.ts","../../src/pipes/group-runs.pipe.ts","../../src/pipes/group-vehicle-status.pipe.ts","../../src/services/interceptors/ApiTokenInterceptor.ts","../../src/services/interceptors/AuthFailedInterceptor.ts","../../src/providers/internet-status/internet-status.ts","../../src/models/vehicle.ts","../../src/services/user.service.ts","../../src/services/auth.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport let API_ENDPOINT = new InjectionToken('api.endpoint');\n\n\n\n// WEBPACK FOOTER //\n// ./src/tokens/api-endpoint.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HttpService } from './http.service';\nimport { Vehicle } from '../models/vehicle';\nimport { VehicleStatus } from '../models/vehicle-status';\nimport {HttpClient} from \"@angular/common/http\";\n\nexport { Vehicle, VehicleStatus };\n\n/**\n * Retrive one or all Vehicle.\n *\n * @export\n * @class VehicleService\n */\n@Injectable()\nexport class VehicleService {\n\n  constructor(private httpService: HttpClient) {}\n\n  all(): Observable<Vehicle[]> {\n    return this.httpService\n      .get<any[]>('/vehicles')\n      .map(array => array.map(data => Vehicle.build(data)));\n  }\n\n  get(id: string): Observable<Vehicle> {\n    return this.httpService\n      .get(`/vehicles/${id}`)\n      .map(data => Vehicle.build(data));\n  }\n\n  status(): Observable<VehicleStatus[]> {\n    return this.httpService\n      .get<any[]>(`/vehicles`)\n      .map(data => data.map(d => VehicleStatus.build(d)));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/vehicle.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {HttpClient} from \"@angular/common/http\";\n// import { HttpService } from './http.service';\nimport { Run } from '../models/run';\nexport {Run};\n/**\n * Allows you to retrieve or modify the status of a run.\n *\n * @export\n * @class RunService\n */\n@Injectable()\nexport class RunService {\n\n  constructor(private httpService: HttpClient) {}\n\n/**\n * List all run\n *\n * @returns {Observable<Run[]>}\n *\n * @memberOf RunService\n */\n  all(): Observable<Run[]> {\n    return this.httpService\n      .get<any[]>('/runs?status=needs_filling,empty,error')\n      .map(array => array.map(data => Run.build(data)))\n      .map(runs => runs.map(run => {\n        if(run.missingUsers())\n          return run;\n      }));\n  }\n\n  /**\n   * Get one run\n   *\n   * @param {string} id Unique identifier of the run\n   * @returns {Observable<Run>}\n   *\n   * @memberOf RunService\n   */\n  get(id: string): Observable<Run> {\n    return this.httpService\n      .get<any>(`/runs/${id}`)\n\n      .map(data => Run.build(data));\n  }\n\n  /**\n   * Start the run.\n   * All member are ready to execute the run.\n   *\n   * @param {Run} { id }\n   * @returns {Observable<any>}\n   *\n   * @memberOf RunService\n   */\n  start({ id }: Run): Observable<any> {\n    return this.httpService.post(`/runs/${id}/start`, '');\n  }\n\n/**\n * Stop the run.\n * This action close the run (completed)\n *\n * @param {Run} { id }\n * @returns {Observable<any>}\n *\n * @memberOf RunService\n */\n  stop({ id }: Run): Observable<any> {\n    return this.httpService.post(`/runs/${id}/stop`, '');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/run.service.ts","export enum RunStatusEnum {\n  empty = <any>'empty',\n  organizingUsers = <any>'organizing-users',\n  organizingVehicles = <any>'organizing-vehicles',\n  ready = <any>'ready',\n  inProgress = <any>'inProgress',\n  completed = <any>'completed',\n  problem = <any>'problem',\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/enums/run-status.enum.ts","import { Component } from '@angular/core';\nimport { NavController, Platform, ToastController } from 'ionic-angular';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { AuthService } from '../../services/auth.service';\nimport { AuthStorage } from '../../storages/auth.storage';\nimport { TabsPage } from '../tabs/tabs';\n\n/**\n * This class displays the login page\n *\n * @export\n * @class LoginPage\n */\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html'\n})\nexport class LoginPage {\n\n  constructor(private platform: Platform, private navCtrl: NavController, private toastCtrl: ToastController, private authService: AuthService, private authStorage: AuthStorage, private splashScreen: SplashScreen, private barcodeScanner: BarcodeScanner) {\n    this.platform.ready()\n      .then(() => this.authService.isAuthenticated ? this.navCtrl.setRoot(TabsPage) : null)\n      .then(() => this.splashScreen.hide());\n  }\n\n/**\n * This function launch the scan to oprerate with a qrcode as soon as the device is ready\n *\n *\n * @memberOf LoginPage\n */\n  scan(): void {\n    this.platform.ready().then(() => {\n\n      this.barcodeScanner\n        .scan({\n          preferFrontCamera: false,\n          showFlipCameraButton: true,\n          showTorchButton: true,\n          'prompt': 'Scannez le QRCode derrière votre carte',\n          formats: 'QR_CODE',\n        })\n        .then(result => !result.cancelled && this.login(result.text));\n    });\n  }\n\n/**\n * This function allow to enter the code to connect to the app manually (you have to swipe to the left to discover this option)\n *\n * @param {any} e\n * @returns {void}\n *\n * @memberOf LoginPage\n */\n  manually(e): void {\n    e.preventDefault();\n    const key = e.target.key.value;\n\n    if (!key) {\n      this.toastCtrl.create({\n        message: 'Le champ est vide',\n        duration: 1500,\n        position: 'top',\n        showCloseButton: true,\n      }).present();\n      return;\n    }\n\n    this.login(key);\n  }\n\n/**\n * Log in the user and display a toast in case of error or successful connection\n *\n * @param {string} key\n *\n * @memberOf LoginPage\n */\n  login(key: string): void {\n    this.authService.login(key).subscribe(\n      user => {\n        this.toastCtrl.create({\n          message: `Bonjour ${user.fullname}, vous êtes connecté`,\n          duration: 3000,\n          position: 'top',\n          showCloseButton: true,\n        }).present();\n        this.navCtrl.setRoot(TabsPage);\n      },\n      err => {\n        if (err.status == 401) this.toastCtrl.create({\n            message: 'La clé est erronée',\n            duration: 10000,\n            position: 'top',\n            showCloseButton: true,\n          }).present();\n        else this.toastCtrl.create({\n            message: 'Problème de connexion, veuillez ressayer plus tard',\n            duration: 10000,\n            position: 'top',\n            showCloseButton: true,\n          }).present();\n      }\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { Component } from '@angular/core'\nimport { NavController, NavParams, LoadingController } from 'ionic-angular'\n\nimport { AuthStorage } from '../../storages/auth.storage'\nimport { CallNumber } from 'ionic-native'\n\nimport { UserService, User } from '../../services/user.service'\n\n/**\n * This class displays the profil of a user\n *\n * @export\n * @class ProfilPage\n */\n@Component({\n  selector: 'page-profil',\n  templateUrl: 'profil.html',\n})\nexport class ProfilPage {\n  user: User\n\n  constructor(\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private loadingCtrl: LoadingController,\n    private userService: UserService,\n    private authStorage: AuthStorage\n  ) {}\n\n  ionViewWillEnter() {\n    const loader = this.loadingCtrl.create({ content: 'Chargement ...' })\n    loader.present()\n    this.loadUser().subscribe(\n      user => console.log(user),\n      err => err.status != 401 && loader.dismiss(),\n      () => loader.dismiss()\n    )\n  }\n  /**\n   * Load the datas of the user\n   *\n   * @returns\n   *\n   * @memberOf ProfilPage\n   */\n  loadUser() {\n    return this.userService\n      .get(this.navParams.get('id'))\n      .do(user => (this.user = user))\n  }\n\n  /**\n   * Call the user with a notive functionality\n   *\n   *\n   * @memberOf ProfilPage\n   */\n  callUser() {\n    CallNumber.callNumber(this.user.phoneNumber, false)\n      .then(() => console.log('Launched dialer!'))\n      .catch(() => console.log('Error launching dialer / not available'))\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/profil/profil.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 179;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 179\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 223;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 223\n// module chunks = 0","import { Injectable } from '@angular/core';\n\nimport { User } from '../models/user';\n\n/**\n * Store the key and the authenticated user\n * \n * @export\n * @class AuthStorage\n */\n@Injectable()\nexport class AuthStorage {\n\n  private keyForKey = 'authToken';\n  private keyForUser = 'user';\n\n\n  /**\n   * Get the user token (key)\n   * @readonly\n   * @type {string}\n   * @memberOf AuthStorage\n   */\n  get key(): string | null {\n    return localStorage.getItem(this.keyForKey);\n  }\n\n  set key(key: string | null) {\n    localStorage.setItem(this.keyForKey, key);\n  }\n  /**\n   * Get the authenticated user\n   * @readonly\n   * @type {User}\n   * @memberOf AuthStorage\n   */\n  get user(): User | null {\n    return User.build(JSON.parse(localStorage.getItem(this.keyForUser)));\n  }\n\n  set user(user: User | null) {\n    localStorage.setItem(this.keyForUser, JSON.stringify(user));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storages/auth.storage.ts","/**\n * The category of a vehicle\n *\n * @export\n * @class VehicleCategory\n */\nexport class VehicleCategory {\n\n  /**\n   * Uniq identifier of the category\n   *\n   * @type {string}\n   * @memberOf VehicleCategory\n   */\n  public id: string;\n\n  /**\n   * Name of the category\n   *\n   * @type {string}\n   * @memberOf VehicleCategory\n   */\n  public type: string;\n\n  /**\n   * description of the category\n   *\n   * @type {string}\n   * @memberOf VehicleCategory\n   */\n  public description: string;\n\n  /**\n   * Factory that uses json data for build VehicleCategory instance\n   *\n   * @static\n   * @param {*} data\n   * @returns {VehicleCategory}\n   *\n   * @memberOf VehicleCategory\n   */\n  static build(data: any): VehicleCategory {\n    if (!data) return null;\n\n    const vc = new VehicleCategory;\n    vc.type = data.type || null;\n    vc.description = data.description || null;\n\n    return vc;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/vehicle-category.ts","export enum VehicleStatusEnum {\n  free = <any>'free',\n  taken = <any>'taken',\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/enums/vehicle-status.enum.ts","import { VehicleCategory } from './vehicle-category';\nimport { Vehicle } from './vehicle';\nimport { User } from './user';\n\n/**\n * a Runner is a convoy, it belongs to a run\n *\n * @export\n * @class Runner\n */\nexport class Runner {\n\n  /**\n   * Uniq identifier of the runner\n   *\n   * @type {string}\n   * @memberOf Runner\n   */\n  public id: string;\n\n  /**\n   * The category of vehicle should use for this runner\n   *\n   * @type {VehicleCategory}\n   * @memberOf Runner\n   */\n  public vehicleCategory?: VehicleCategory;\n\n  /**\n   * The user who do this run\n   *\n   * @type {User}\n   * @memberOf Runner\n   */\n  public user?: User;\n\n  /**\n   * The vehicle that used for this run\n   *\n   * @type {Vehicle}\n   * @memberOf Runner\n   */\n  public vehicle?: Vehicle;\n\n  /**\n   * Factory that uses json data for build Runner instance\n   *\n   * @static\n   * @param {*} data\n   * @returns {Runner}\n   *\n   * @memberOf Runner\n   */\n  static build(data: any): Runner {\n    if (!data) return null;\n\n    const r = new Runner;\n    r.id = data.id || data._id;\n    r.vehicleCategory = VehicleCategory.build(data.vehicle_category);\n    r.user = User.build(data.user);\n    r.vehicle = Vehicle.build(data.car);\n\n    return r;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/runner.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HttpService } from './http.service';\nimport { Runner } from '../models/runner';\nimport { Vehicle } from '../models/vehicle';\nimport { User } from '../models/user';\nimport {HttpClient} from \"@angular/common/http\";\n\nexport { Runner };\n\n/**\n * Allows to modify the convoy.\n * This is the runner pair (user) with a vehicle inside a run.\n * @see {Runner}\n * @export\n * @class RunnerService\n */\n@Injectable()\nexport class RunnerService {\n\n  constructor(private httpService: HttpClient) {}\n\n  /**\n   * Get one runner\n   *\n   * @param {string} id Unique identifier of the runner\n   * @returns {Observable<Runner>}\n   *\n   * @memberOf RunnerService\n   */\n  get(id: string): Observable<Runner> {\n    return this.httpService\n      .get(`/runners/${id}`)\n      .map(data => Runner.build(data));\n  }\n\n/**\n * Link a vehicle to the runner.\n *\n * @param {Runner} runner\n * @param {Vehicle} vehicle\n * @returns {Observable<Runner>}\n *\n * @memberOf RunnerService\n */\n  setVehicle({ id }: Runner, vehicle: Vehicle): Observable<Runner> {\n    return this.httpService\n      .patch(`/runners/${id}`, JSON.stringify({\n        vehicle,\n      }))\n      .map(data => Runner.build(data));\n  }\n\n  /**\n * The authenticated user will join the run\n *\n * @param {Runner} { id }\n * @param {User} user\n * @returns {Observable<Runner>}\n *\n * @memberOf UserService\n */\n  setUser({ id }: Runner, user: User): Observable<Runner> {\n    return this.httpService\n      .patch(`/runners/${id}`, JSON.stringify({\n        user: user.id,\n      }))\n\n      .map(data => Runner.build(data));\n  }\n\n/**\n * List all available vehicle for the given runner\n *\n * @param {Runner} { id }\n * @returns {Observable<Vehicle[]>}\n *\n * @memberOf RunnerService\n */\n  availableVehicles({ id }: Runner): Observable<Vehicle[]> {\n    return this.httpService\n      .get<any[]>(`/runners/${id}/vehicles?status=free`)\n      .map(datas => datas.map(data => Vehicle.build(data)));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/runner.service.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { Subscription } from 'rxjs';\n\nimport { AuthService } from '../../services/auth.service';\nimport { LoginPage } from '../login/login';\nimport { RunsPage } from '../runs/runs';\nimport { VehiclesPage } from '../vehicles/vehicles';\n\n/**\n * This class display the tabs menu (always displayed when logged in)\n *\n * @export\n * @class TabsPage\n */\n@Component({\n  selector: 'page-tabs',\n  templateUrl: 'tabs.html'\n})\nexport class TabsPage {\n\n  tab1: any = RunsPage;\n  tab2: any = VehiclesPage;\n\n  loggedSubscriber: Subscription;\n\n  constructor(private navCtrl: NavController, private authService: AuthService) {}\n\n/**\n * When the auth service tells us the user isn't authenticate, we redirect the user to the login page\n *\n * @memberOf TabsPage\n */\n  ionViewWillLoad() {\n    this.loggedSubscriber = this.authService.loggedOut.subscribe(() => this.navCtrl.setRoot(LoginPage));\n  }\n\n/**\n * As soon as we leave the tabs page, we unsubscribe to the auth service\n *\n *\n * @memberOf TabsPage\n */\n  ionViewWillLeave() {\n    this.loggedSubscriber && this.loggedSubscriber.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Component } from '@angular/core'\nimport { NavController, LoadingController, ToastController } from 'ionic-angular'\n\nimport { RunService, Run } from '../../services/run.service'\nimport { RunPage } from '../run/run'\nimport { FilterByEnum } from '../../enums/filter-by.enum'\nimport { RunStatusEnum } from '../../enums/run-status.enum'\nimport { CacheService } from 'ionic-cache'\n\n@Component({\n  selector: 'page-runs',\n  templateUrl: 'runs.html',\n})\nexport class RunsPage {\n  runs: Run[] = []\n  FilterByEnum = FilterByEnum\n  RunStatusEnum = RunStatusEnum\n  filteredBy: FilterByEnum = FilterByEnum.current\n\n  connected: boolean = true;\n\n  constructor(\n    private navCtrl: NavController,\n    private loadingCtrl: LoadingController,\n    private runService: RunService,\n    private cache: CacheService,\n    private toast: ToastController\n  ) { }\n\n  ionViewWillEnter() {\n    console.log(this.cache.isOnline());\n\n\n\n    this.cache.getNetworkStatusChanges().subscribe(\n      (connected) => {\n        this.connected = connected;\n\n        if (!connected) {\n            this.toast.create({\n                message: `Connection lost`,\n                duration: 3000\n            }).present();\n        }\n        else {\n            this.toast.create({\n                message: `Connected`,\n                duration: 3000\n            }).present();\n        }\n      },\n      (err) => {},\n      () => {\n        console.log('changed')\n      },\n    );\n\n    const loader = this.loadingCtrl.create({ content: 'Chargement ...' })\n    loader.present()\n\n    this.loadRuns().subscribe(\n      null,\n      err => err.status != 401 && loader.dismiss(),\n      () => loader.dismiss()\n    )\n  }\n\n  /**\n   * Load all the runs\n   *\n   * @returns\n   *\n   * @memberOf RunsPage\n   */\n  loadRuns() {\n    return this.runService.all().do(runs => (this.runs = runs))\n  }\n\n  /**\n   * Function to refresh when pulled\n   *\n   * @param {any} refresher\n   *\n   * @memberOf RunsPage\n   */\n  refreshRuns(refresher) {\n    this.loadRuns().subscribe(\n      null,\n      err => err.status != 401 && refresher.cancel(),\n      () => refresher.complete()\n    )\n  }\n\n  /**\n   * Show the detail of the run\n   *\n   * @param {Run} { id }\n   *\n   * @memberOf RunsPage\n   */\n  showRun({ id }: Run): void {\n    this.navCtrl.push(RunPage, { id })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/runs/runs.ts","import { Component } from '@angular/core'\nimport {\n  NavController,\n  NavParams,\n  LoadingController,\n  AlertController,\n} from 'ionic-angular'\n\nimport { RunService, Run } from '../../services/run.service'\nimport { AuthStorage } from '../../storages/auth.storage'\nimport { RunnerPage } from '../runner/runner'\nimport { Runner } from '../../models/runner' // FIXME: is this the proper way ? (maybe get Runner from RunnerPage or RunService)\nimport { RunStatusEnum } from '../../enums/run-status.enum'\n\n/**\n * This class displays the details of a run when selected from the board\n *\n * @export\n * @class RunPage\n */\n@Component({\n  selector: 'page-run',\n  templateUrl: 'run.html',\n})\nexport class RunPage {\n  run: Run\n  RunStatusEnum = RunStatusEnum\n\n  constructor(\n    private navCtrl: NavController,\n    private alertCtrl: AlertController,\n    private navParams: NavParams,\n    private loadingCtrl: LoadingController,\n    private runService: RunService,\n    private authStorage: AuthStorage\n  ) {}\n\n  ionViewWillEnter() {\n    const loader = this.loadingCtrl.create({ content: 'Chargement ...' })\n    loader.present()\n    this.loadRun().subscribe(\n      null,\n      err => err.status != 401 && loader.dismiss(),\n      () => loader.dismiss()\n    )\n  }\n\n  /**\n   * Load the datas of the run\n   *\n   * @returns\n   *\n   * @memberOf RunPage\n   */\n  loadRun() {\n    return this.runService\n      .get(this.navParams.get('id'))\n      .do(run => (this.run = run))\n  }\n\n  /**\n   * Pull to refresh to actualize the view according to the new datas on the backend\n   *\n   * @param {any} refresher\n   *\n   * @memberOf RunPage\n   */\n  refreshRun(refresher) {\n    this.loadRun().subscribe(\n      null,\n      err => err.status != 401 && refresher.cancel(),\n      () => refresher.complete()\n    )\n  }\n\n  /**\n   * Show the view for the convoy selected\n   *\n   * @param {Runner} { id }\n   *\n   * @memberOf RunPage\n   */\n  showRunner({ id }: Runner, { title }: Run) {\n    this.navCtrl.push(RunnerPage, { id, title })\n  }\n\n  /**\n   * Method to start the run (assign the current user) with a confirmation box\n   *\n   *\n   * @memberOf RunPage\n   */\n  start() {\n    this.alertCtrl\n      .create({\n        title: 'Démarrer le run ?',\n        message:\n          'Assurez-vous que tous les autres chauffeurs sont prêts à partir !',\n        buttons: [\n          {\n            text: 'Annuler',\n          },\n          {\n            text: 'Confirmer',\n            handler: () => {\n              this.runService.start(this.run).subscribe()\n            },\n          },\n        ],\n      })\n      .present()\n  }\n\n  /**\n   * Method to mark the run as finished with a confirmation box\n   *\n   *\n   * @memberOf RunPage\n   */\n  stop() {\n    this.alertCtrl\n      .create({\n        title: 'Terminer le run ?',\n        message:\n          'Assurez-vous que tous les autres chauffeurs aillent aussi fini !',\n        buttons: [\n          {\n            text: 'Annuler',\n          },\n          {\n            text: 'Confirmer',\n            handler: () => {\n              this.runService.stop(this.run).subscribe()\n            },\n          },\n        ],\n      })\n      .present()\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/run/run.ts","import { Component } from '@angular/core'\nimport { NavController, NavParams, LoadingController } from 'ionic-angular'\nimport { Observable } from 'rxjs'\n\nimport { RunnerService, Runner } from '../../services/runner.service'\nimport { UserService, User } from '../../services/user.service'\nimport { AuthStorage } from '../../storages/auth.storage'\nimport { ProfilPage } from '../profil/profil'\n\nimport { Vehicle } from '../../models/vehicle'\nimport { Run } from '../../models/run'\n\n/**\n * This class displays the convoy selected\n *\n * @export\n * @class RunnerPage\n */\n@Component({\n  selector: 'page-runner',\n  templateUrl: 'runner.html',\n})\nexport class RunnerPage {\n  runner: Runner\n  run: Run\n  availableVehicles: Vehicle[]\n\n  constructor(\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private loadingCtrl: LoadingController,\n    private runnerService: RunnerService,\n    private userService: UserService,\n    private authStorage: AuthStorage\n  ) {}\n\n  ionViewWillEnter() {\n    const loader = this.loadingCtrl.create({ content: 'Chargement ...' })\n    loader.present()\n\n    this.run = this.navParams.get('title')\n    this.loadRunner().subscribe(\n      null,\n      err => err.status != 401 && loader.dismiss(),\n      () => loader.dismiss()\n    )\n  }\n\n  /**\n   * Load the data of the runner\n   *\n   * @returns {Observable<Runner>}\n   *\n   * @memberOf RunnerPage\n   */\n  loadRunner(): Observable<Runner> {\n    return this.runnerService\n      .get(this.navParams.get('id'))\n      .do(runner => (this.runner = runner))\n      .do(runner => !runner.vehicle && this.loadAvailableVehicles().subscribe())\n  }\n\n  /**\n   * Load the vehicles availables\n   *\n   * @returns {Observable<Vehicle[]>}\n   *\n   * @memberOf RunnerPage\n   */\n  loadAvailableVehicles(): Observable<Vehicle[]> {\n    return this.runnerService\n      .availableVehicles(this.runner)\n      .do(vehicles => (this.availableVehicles = vehicles))\n  }\n\n  /**\n   * Push to refresh the datas\n   *\n   * @param {any} refresher\n   *\n   * @memberOf RunnerPage\n   */\n  refreshRunner(refresher): void {\n    this.loadRunner().subscribe(\n      null,\n      err => err.status != 401 && refresher.cancel(),\n      () => refresher.complete()\n    )\n  }\n\n  /**\n   * Set the user for the convoy\n   *\n   *\n   * @memberOf RunnerPage\n   */\n  selectUser(): void {\n    const loader = this.loadingCtrl.create({ content: 'Traitement ...' })\n    loader.present()\n\n    this.runnerService\n      .setUser(this.runner, this.authStorage.user)\n      .subscribe(\n        runner => (this.runner = runner),\n        err => err.status != 401 && loader.dismiss(),\n        () => loader.dismiss()\n      )\n  }\n\n  /**\n   * Assign a vehicle to the convoy\n   *\n   * @param {Vehicle} vehicle\n   *\n   * @memberOf RunnerPage\n   */\n  selectVehicle(vehicle: Vehicle): void {\n    const loader = this.loadingCtrl.create({ content: 'Traitement ...' })\n    loader.present()\n\n    this.runnerService\n      .setVehicle(this.runner, vehicle)\n      .subscribe(\n        runner => (this.runner = runner),\n        err => err.status != 401 && loader.dismiss(),\n        () => loader.dismiss()\n      )\n  }\n\n  /**\n   * Display the profil page of the user\n   *\n   * @param {User} { id }\n   *\n   * @memberOf RunnerPage\n   */\n  showProfil({ id }: User): void {\n    this.navCtrl.push(ProfilPage, { id })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/runner/runner.ts","import { Run } from './run';\n\n/**\n * User is the driver who do the run\n *\n * @export\n * @class User\n */\nexport class User {\n\n  /**\n   * Uniq identifier of the user\n   *\n   * @type {string}\n   * @memberOf User\n   */\n  public id: string;\n\n  /**\n   * Firstname of the user\n   *\n   * @type {string}\n   * @memberOf User\n   */\n  public firstname: string;\n\n  /**\n   * Lastname of the user\n   *\n   * @type {string}\n   * @memberOf User\n   */\n  public lastname: string;\n\n  /**\n   * Phonenumber of the user\n   *\n   * @type {string}\n   * @memberOf User\n   */\n  public phoneNumber: string;\n\n  /**\n   * Profile image of the user\n   *\n   * @type {string}\n   * @memberOf User\n   */\n  public image_profile: string;\n\n  /**\n   * Get fullname by concating of firstname and lastname\n   *\n   * @readonly\n   *\n   * @memberOf User\n   */\n  get fullname() {\n    return `${this.firstname} ${this.lastname}`;\n  }\n\n  /**\n   * Factory that uses json data for build User instance\n   *\n   * @static\n   * @param {*} data\n   * @returns {User}\n   *\n   * @memberOf User\n   */\n  static build(data: any): User {\n    if (!data) return null;\n\n    let u = new User;\n    u.id = data._id || data.id;\n    u.firstname = data.firstname || null;\n    u.lastname = data.lastname || null;\n    u.phoneNumber = data.phone_number || null;\n    u.image_profile = data.image_profile || \"assets/user.jpg\";\n\n    return u;\n  }\n\n  /**\n   * Test if user belongs to a run\n   *\n   * @param {Run} run\n   * @returns {boolean}\n   *\n   * @memberOf User\n   */\n  belongsToRun(run: Run): boolean {\n    return !!run.runners.filter(runner => runner.user && runner.user.id == this.id).length;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/user.ts","export enum FilterByEnum {\n  current = <any>'current',\n  mine = <any>'mine',\n  old = <any>'old',\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/enums/filter-by.enum.ts","import { Component } from '@angular/core'\nimport { NavController, LoadingController } from 'ionic-angular'\nimport { VehiclePage } from '../vehicle/vehicle'\n\nimport { VehicleService, VehicleStatus } from '../../services/vehicle.service'\n\n/**\n * This class lists all vehicles available or in use.\n *\n * @export\n * @class VehiclesPage\n */\n@Component({\n  selector: 'page-vehicles',\n  templateUrl: 'vehicles.html',\n})\nexport class VehiclesPage {\n  vehicleStatus: VehicleStatus[] = []\n\n  constructor(\n    private navCtrl: NavController,\n    private loadingCtrl: LoadingController,\n    private vehicleService: VehicleService\n  ) {}\n\n  ionViewWillEnter() {\n    const loader = this.loadingCtrl.create({ content: 'Chargement ...' })\n    loader.present()\n    this.loadVehicleStatus().subscribe(\n      null,\n      err => err.status != 401 && loader.dismiss(),\n      () => loader.dismiss()\n    )\n  }\n\n  /**\n   * Load the datas of the vehicle\n   *\n   * @returns\n   *\n   * @memberOf VehiclesPage\n   */\n  loadVehicleStatus() {\n    return this.vehicleService\n      .status()\n      .do(vehicleStatus => (this.vehicleStatus = vehicleStatus))\n  }\n\n  refreshVehicleStatus(refresher) {\n    this.loadVehicleStatus().subscribe(\n      null,\n      err => err.status != 401 && refresher.cancel(),\n      () => refresher.complete()\n    )\n  }\n\n  /**\n   * Show the page detailing the vehicle\n   *\n   * @param {VehicleStatus} v\n   *\n   * @memberOf VehiclesPage\n   */\n  showVehicle(v: VehicleStatus): void {\n    this.navCtrl.push(VehiclePage, { id: v.vehicle.id })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/vehicles/vehicles.ts","import { Component } from '@angular/core'\nimport { Vehicle, VehicleService } from '../../services/vehicle.service'\nimport { ProfilPage } from '../../pages/profil/profil'\nimport { User } from '../../models/user'\nimport { NavController, NavParams, LoadingController } from 'ionic-angular'\nimport { VehicleStatusEnum } from '../../enums/vehicle-status.enum'\n\n/**\n * This class displays the profile of a vehicle\n *\n * @export\n * @class VehiclePage\n */\n@Component({\n  selector: 'page-vehicle',\n  templateUrl: 'vehicle.html',\n})\nexport class VehiclePage {\n  vehicle: Vehicle = Vehicle.build(null)\n  VehicleStatusEnum = VehicleStatusEnum\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    private loadingCtrl: LoadingController,\n    private vehicleService: VehicleService\n  ) {\n\n  }\n\n  ionViewWillEnter() {\n    const loader = this.loadingCtrl.create({ content: 'Chargement ...' })\n    loader.present()\n    this.loadVehicleStatus().subscribe(\n      null,\n      err => err.status != 401 && loader.dismiss(),\n      () => loader.dismiss()\n    )\n  }\n\n  /**\n   * Load the data linked to the vehicle\n   *\n   * @returns\n   *\n   * @memberOf VehiclePage\n   */\n  loadVehicleStatus() {\n    return (\n      this.vehicleService\n        .get(this.navParams.get('id'))\n        // TODO: fake data you have to replace them by real one\n        .map(vehicle =>\n          Object.assign(vehicle, {\n            status: VehicleStatusEnum.taken,\n            user: User.build({\n              id: '140a24be-762e-4b83-b43a-1b6314d9bd3c',\n              firstname: 'Laura',\n              lastname: 'Remy',\n            }),\n            comments: [\n              {\n                createdAt: new Date(),\n                message:\n                  'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deleniti architecto qui laboriosam. Ipsa dolorum saepe nihil enim ex, eius soluta esse animi, illum sit nulla iste ea consequatur, assumenda provident?',\n                author: User.build({\n                  id: '140a24be-762e-4b83-b43a-1b6314d9bd3c',\n                  firstname: 'Laura',\n                  lastname: 'Remy',\n                }),\n              },\n              {\n                createdAt: new Date(),\n                message:\n                  'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deleniti architecto qui laboriosam. Ipsa dolorum saepe nihil enim ex, eius soluta esse animi, illum sit nulla iste ea consequatur, assumenda provident?',\n                author: User.build({\n                  id: '140a24be-762e-4b83-b43a-1b6314d9bd3c',\n                  firstname: 'Laura',\n                  lastname: 'Remy',\n                }),\n              },\n            ],\n          })\n        )\n        .do(vehicle => (this.vehicle = vehicle))\n    )\n  }\n\n  /**\n   * Pull to refresh method to actualize the data\n   *\n   * @param {any} refresher\n   *\n   * @memberOf VehiclePage\n   */\n  refreshVehicleStatus(refresher) {\n    this.loadVehicleStatus().subscribe(\n      null,\n      err => err.status != 401 && refresher.cancel(),\n      () => refresher.complete()\n    )\n  }\n\n  /**\n   * On click on the user, show the profil page\n   *\n   * @param {User} { id }\n   *\n   * @memberOf VehiclePage\n   */\n  showUser({ id }: User): void {\n    this.navCtrl.push(ProfilPage, { id })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/vehicle/vehicle.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler, LOCALE_ID } from '@angular/core';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\n\nimport { CacheModule } from \"ionic-cache\";\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\n\nimport { api } from '../runners.config';\nimport { API_ENDPOINT } from '../tokens/api-endpoint';\n\nimport { HttpService } from '../services/http.service';\nimport { VehicleService } from '../services/vehicle.service';\nimport { UserService } from '../services/user.service';\nimport { RunService } from '../services/run.service';\nimport { RunnerService } from '../services/runner.service';\nimport { AuthService } from '../services/auth.service';\nimport { AuthStorage } from '../storages/auth.storage';\n\nimport { MyApp } from './app.component';\nimport { LoginPage } from '../pages/login/login';\nimport { TabsPage } from '../pages/tabs/tabs';\nimport { RunsPage } from '../pages/runs/runs';\nimport { RunPage } from '../pages/run/run';\nimport { ProfilPage } from '../pages/profil/profil';\nimport { VehiclesPage } from '../pages/vehicles/vehicles';\nimport { VehiclePage } from '../pages/vehicle/vehicle';\nimport { RunnerPage } from '../pages/runner/runner';\n\nimport { FilterRunsPipe } from '../pipes/filter-runs.pipe';\nimport { GroupRunsPipe } from '../pipes/group-runs.pipe';\nimport { GroupVehicleStatusPipe } from '../pipes/group-vehicle-status.pipe';\nimport {ApiTokenInterceptor} from \"../services/interceptors/ApiTokenInterceptor\";\nimport {AuthFailedInterceptor} from \"../services/interceptors/AuthFailedInterceptor\";\nimport { InternetStatusProvider } from '../providers/internet-status/internet-status';\n\n\n@NgModule({\n  declarations: [\n    MyApp,\n    LoginPage,\n    TabsPage,\n    RunsPage,\n    RunPage,\n    VehiclesPage,\n    VehiclePage,\n    RunnerPage,\n    ProfilPage,\n    FilterRunsPipe,\n    GroupRunsPipe,\n    GroupVehicleStatusPipe,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    CacheModule.forRoot(),\n    IonicModule.forRoot(MyApp),\n\n\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    LoginPage,\n    TabsPage,\n    RunsPage,\n    RunPage,\n    VehiclesPage,\n    VehiclePage,\n    RunnerPage,\n    ProfilPage,\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    BarcodeScanner,\n    {\n      provide: API_ENDPOINT,\n      useValue: api,\n    },\n    {\n      provide: LOCALE_ID,\n      useValue: 'en-US',\n    },\n    {\n      provide: ErrorHandler,\n      useClass: IonicErrorHandler,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiTokenInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthFailedInterceptor,\n      multi: true\n    },\n    AuthStorage,\n    HttpService,\n    UserService,\n    AuthService,\n    VehicleService,\n    RunService,\n    RunnerService,\n    InternetStatusProvider,\n  ],\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","export const api = \"http://sc-c333-pc08/api\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/runners.config.ts","import { Http, Headers, RequestOptions, RequestOptionsArgs, Response, RequestMethod, Request } from '@angular/http';\nimport { Injectable, Inject } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { Observable, Subject } from 'rxjs';\nimport 'rxjs/add/operator/map';\n\nimport { API_ENDPOINT } from '../tokens/api-endpoint';\nimport { AuthStorage } from '../storages/auth.storage';\nimport {CacheService} from \"ionic-cache\";\nimport {HttpClient, HttpHeaders, HttpParams, HttpRequest} from \"@angular/common/http\";\n\n// Widely inspirated by https://gist.github.com/chandermani/9166abe6e6608a31f471\n\nexport { Response, RequestOptionsArgs };\n\n/**\n * This class add http header on each request.\n * And detect if the user have not sucessfully authenticated.\n *\n * @export\n * @class HttpService\n */\n@Injectable()\nexport class HttpService {\n\n  public authFailed: Subject<any> = new Subject<any>();\n\n  constructor(@Inject(API_ENDPOINT) private base: string, private platform: Platform, private http: HttpClient, private authStorage: AuthStorage, private cache: CacheService) {}\n\n  public get(url: string, options?: RequestOptionsArgs): Observable<any> {\n    return this.request(\"GET\", url, null, options);\n  }\n\n  public post(url: string, body: string, options?: RequestOptionsArgs): Observable<any> {\n    return this.request(\"POST\", url, body, options);\n  }\n\n  public put(url: string, body: string, options?: RequestOptionsArgs): Observable<any> {\n    return this.request(\"PUT\", url, body, options);\n  }\n\n  public delete(url: string, options?: RequestOptionsArgs): Observable<any> {\n    return this.request(\"DELETE\", url, null, options);\n  }\n\n  public patch(url: string, body: string, options?: RequestOptionsArgs): Observable<any> {\n    return this.request(\"PATCH\", url, body, options);\n  }\n\n  public head(url: string, options?: RequestOptionsArgs): Observable<any> {\n    return this.request(\"HEAD\", url, null, options);\n  }\n  private buildRequest(options: {\n    body?: any;\n    headers?: HttpHeaders;\n    observe: 'events';\n    params?: HttpParams;\n    reportProgress?: boolean;\n  }){\n    return {\n      ...options, headers : options.headers.append('x-access-token', this.authStorage.key)\n    }\n  }\n  private request(method: string, url: string, body?: string, options?: RequestOptionsArgs): Observable<any> {\n\n    let headers = new HttpHeaders();\n    headers = headers.append('x-access-token', this.authStorage.key)\n\n\n\n    let r = new HttpRequest(method,  this.buildUrl(url), body, {headers});\n    console.log(\"REQUEST\");\n    console.log(r)\n\n    let response = this.http.request(r)\n      .catch(err => {\n        // If the user is not correctly authenticated.\n        err.status == 401 && this.authFailed.next(err);\n\n        return Observable.throw(err);\n      });\n\n    let cacheKey = method + url;\n\n    // response\n    //         .do(res => console.log(res))\n    //\n    //         .subscribe(r => console.log(r));\n\n    // response.do(res => {\n    //                   console.log(\"RESPONSE\")\n    //                   console.log(res)\n    //                 })\n    //                 .subscribe()\n                    // .map(res => res.body)\n    // return this.cache.loadFromObservable(cacheKey, request);\n    // return Observable.create(observer => {\n    //   console.log(observer)\n    //   response.subscribe(d => observer.complete(d));\n    //\n    //\n    // }).do(data => console.log(data));\n    return response\n  }\n\n  private buildUrl(endpoint: string): string {\n    return this.base + endpoint;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/http.service.ts","import { Vehicle } from './vehicle';\nimport { User } from './user';\n\nimport { VehicleStatusEnum } from '../enums/vehicle-status.enum';\n\n/**\n * The status of a vehicle\n *\n * @export\n * @class VehicleStatus\n */\nexport class VehicleStatus {\n\n  /**\n   * The vehicle concerned by this status\n   *\n   * @type {Vehicle}\n   * @memberOf VehicleStatus\n   */\n  public vehicle: Vehicle;\n\n  /**\n   * Who drives the vehicle if it's taken\n   *\n   * @type {User}\n   * @memberOf VehicleStatus\n   */\n  public user: User;\n\n  /**\n   * Factory that uses json data for build VehicleStatus instance\n   *\n   * @static\n   * @param {*} data\n   * @returns {VehicleStatus}\n   *\n   * @memberOf VehicleStatus\n   */\n  static build(data: any): VehicleStatus {\n    if (!data) return null;\n\n    const vs = new VehicleStatus;\n    vs.vehicle = Vehicle.build(data);\n    vs.user = User.build(data.user);\n\n    return vs;\n  }\n\n  /**\n   * Is the vehicle free ?\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberOf VehicleStatus\n   */\n  get free(): boolean {\n    return !this.user;\n  }\n\n  /**\n   * Is the vehicle taken ?\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberOf VehicleStatus\n   */\n  get taken(): boolean {\n    return !!this.user;\n  }\n\n  /**\n   * Give the current status of the VehicleStatus\n   *\n   * @readonly\n   * @type {VehicleStatusEnum}\n   * @memberOf VehicleStatus\n   */\n  get status(): VehicleStatusEnum {\n    if (this.taken) return VehicleStatusEnum.taken;\n    else if (this.free) return VehicleStatusEnum.free;\n    else throw new Error(`VehicleStatus has no status, it's weird`);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/vehicle-status.ts","import { Waypoint } from './waypoint'\nimport { Runner } from './runner'\n\nimport { RunStatusEnum } from '../enums/run-status.enum'\n\n/**\n * a Run is the equivalent to the physical little physical cards on the board\n *\n * @export\n * @class Run\n */\nexport class Run {\n  /**\n   * Unique identifier of the run\n   *\n   * @type {string}\n   * @memberOf Run\n   */\n  public id: string\n\n  /**\n   * Title of the run, generally this is the name of artist\n   *\n   * @type {string}\n   * @memberOf Run\n   */\n  public title: string\n\n  /**\n   * The \"expected\" date, when the run should start\n   *\n   * @type {Date}\n   * @memberOf Run\n   */\n  public beginAt: Date\n\n  /**\n   * The date, when the run was started\n   *\n   * @type {Date}\n   * @memberOf Run\n   */\n  public startAt?: Date\n\n  /**\n   * The date, when the run was ended\n   *\n   * @type {Date}\n   * @memberOf Run\n   */\n  public endAt?: Date\n\n  /**\n   * List of waypoints that drivers must follow\n   *\n   * @type {Waypoint[]}\n   * @memberOf Run\n   */\n  public waypoints: Waypoint[]\n\n  /**\n   * List of convoys that attends to the run\n   *\n   * @type {Runner[]}\n   * @memberOf Run\n   */\n  public runners: Runner[]\n\n  /**\n   * Factory that uses json data for build Run instance\n   *\n   * @static\n   * @param {*} data\n   * @returns {Run}\n   *\n   * @memberOf Run\n   */\n  static build(data: any): Run {\n    if (!data) return null\n\n    const b = new Run()\n    b.id = data.id || data._id\n    b.title = data.title || null\n    b.beginAt = new Date(data.begin_at)\n    b.startAt = data.start_at ? new Date(data.start_at) : null\n    b.endAt = data.end_at ? new Date(data.end_at) : null\n    b.waypoints = data.waypoints.map(d => Waypoint.build(d)) || []\n    b.runners = data.runners.map(d => Runner.build(d)) || []\n\n    return b\n  }\n\n  /**\n   * Does the run is empty ?\n   * no drivers, no vehicles\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberOf Run\n   */\n  get empty(): boolean {\n    return !this.runners.filter(r => r.user || r.vehicle).length\n  }\n\n  /**\n   * Does the run still needs drivers\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberOf Run\n   */\n  get organizingUsers(): boolean {\n    return !!this.runners.filter(r => !r.user).length\n  }\n\n  /**\n   * Does the run still needs vehicles\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberOf Run\n   */\n  get organizingVehicles(): boolean {\n    return !!this.runners.filter(r => !r.vehicle).length\n  }\n\n  /**\n   * Does the run is ready to start\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberOf Run\n   */\n  get ready(): boolean {\n    return !this.runners.filter(r => !r.user || !r.vehicle).length\n  }\n\n  /**\n   * Does the run is in progress\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberOf Run\n   */\n  get inProgress(): boolean {\n    return !!this.startAt\n  }\n\n  /**\n   * Does the run is finished\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberOf Run\n   */\n  get completed(): boolean {\n    return !!this.endAt\n  }\n\n  /**\n   * Does the run is in critical condition\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberOf Run\n   */\n  get problem(): boolean {\n    return false\n  }\n\n  /**\n   * Give the current status of run\n   *\n   * @readonly\n   * @type {RunStatusEnum}\n   * @memberOf Run\n   */\n  get status(): RunStatusEnum {\n    if (this.problem) return RunStatusEnum.problem\n    else if (this.completed) return RunStatusEnum.completed\n    else if (this.inProgress) return RunStatusEnum.inProgress\n    else if (this.ready) return RunStatusEnum.ready\n    else if (this.empty) return RunStatusEnum.empty\n    else if (this.organizingUsers) return RunStatusEnum.organizingUsers\n    else if (this.organizingVehicles) return RunStatusEnum.organizingVehicles\n    else throw new Error(`Run #${this.id} has no status, it's weird`)\n  }\n\n  missingUsers(): boolean {\n    return this.runners.filter(runner => runner.user == null).length >= 0\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/run.ts","/**\n * A waypoint is a geographical point that drivers must go on during a run\n *\n * @export\n * @class Waypoint\n */\nexport class Waypoint {\n\n  /**\n   * The label of the geographical point\n   *\n   * @type {string}\n   * @memberOf Waypoint\n   */\n  public nickname: string;\n\n  /**\n   * The google object that define geographical point\n   * Like it describes here : https://developers.google.com/maps/documentation/geocoding/intro?hl=FR#GeocodingResponses\n   *\n   * @type {*}\n   * @memberOf Waypoint\n   */\n  public geocoder: any;\n\n  /**\n   * Factory that uses json data for build Waypoint instance\n   *\n   * @static\n   * @param {*} data\n   * @returns {Waypoint}\n   *\n   * @memberOf Waypoint\n   */\n  static build(data: any): Waypoint {\n    if (!data) return null;\n\n    let w = new Waypoint;\n    w.nickname = data.nickname || null;\n    w.geocoder = data.geocoder || data.geocode || null;\n\n    return w;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/waypoint.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { LoginPage } from '../pages/login/login';\nimport {CacheService} from \"ionic-cache\";\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage = LoginPage;\n\n  constructor(platform: Platform, cache: CacheService, private statusBar: StatusBar) {\n    platform.ready().then(() => {\n      // Set TTL to 12h\n      cache.setDefaultTTL(60 * 60 * 12);\n\n      // Keep our cached results when device is offline!\n      cache.setOfflineInvalidate(false);\n\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.hide();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable, Pipe } from '@angular/core';\n\nimport { Run } from '../models/run';\nimport { AuthStorage } from '../storages/auth.storage';\nimport { FilterByEnum } from '../enums/filter-by.enum';\n\n@Pipe({\n  name: 'filterRuns'\n})\n@Injectable()\nexport class FilterRunsPipe {\n\n  constructor(private authStorage: AuthStorage) {}\n\n  private onlyCurrent(run: Run): boolean {\n    return !run.completed;\n  }\n\n  private onlyMine(run: Run): boolean {\n    return this.authStorage.user.belongsToRun(run);\n  }\n\n  private onlyOld(run: Run): boolean {\n    return run.completed;\n  }\n\n  private methods: any = {\n    [FilterByEnum.current]: this.onlyCurrent.bind(this),\n    [FilterByEnum.mine]: this.onlyMine.bind(this),\n    [FilterByEnum.old]: this.onlyOld.bind(this),\n    default: () => true,\n  };\n\n  transform(runs: Run[], by: FilterByEnum): Run[] {\n    return runs.filter(this.methods[by] || this.methods.default);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/filter-runs.pipe.ts","import { Injectable, Pipe } from '@angular/core';\n\nimport { Run } from '../models/run';\n\n@Pipe({\n  name: 'groupRuns'\n})\n@Injectable()\nexport class GroupRunsPipe {\n\n  transform(runs: Run[]): any[] {\n    const groupedRuns = runs.reduce((prev: any[], cur: Run) => {\n      const key = `${cur.beginAt.getFullYear()}-${cur.beginAt.getMonth()}-${cur.beginAt.getDate()}`;\n      if (!prev[key]) prev[key] = { date: cur.beginAt, runs: [cur] };\n      else prev[key].runs.push(cur);\n      return prev;\n    }, []);\n    return Object.keys(groupedRuns).map(key => {\n      const { date, runs } = groupedRuns[key];\n      return { date, runs };\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/group-runs.pipe.ts","import { Injectable, Pipe } from '@angular/core';\n\nimport { VehicleStatus } from '../models/vehicle-status';\n\n@Pipe({\n  name: 'groupVehicleStatus'\n})\n@Injectable()\nexport class GroupVehicleStatusPipe {\n\n  transform(vehicleStatus: VehicleStatus[]): any[] {\n    const groupedVehicleStatus = vehicleStatus.reduce((prev: any[], cur: VehicleStatus) => {\n      const key = cur.vehicle.type.type;\n      if (!prev[key]) prev[key] = { type: cur.vehicle.type, vehicleStatus: [cur] };\n      else prev[key].vehicleStatus.push(cur);\n      return prev;\n    }, []);\n    return Object.keys(groupedVehicleStatus).map(key => {\n      const { type, vehicleStatus } = groupedVehicleStatus[key];\n      return { type, vehicleStatus };\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/group-vehicle-status.pipe.ts","import {Inject, Injectable} from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\nimport {AuthStorage} from \"../../storages/auth.storage\";\nimport {API_ENDPOINT} from \"../../tokens/api-endpoint\";\n\n@Injectable()\nexport class ApiTokenInterceptor implements HttpInterceptor {\n  constructor(@Inject(API_ENDPOINT) private base: string, private authStorage: AuthStorage){}\n  intercept (req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let authReq = req.clone({\n      headers: req.headers.set('x-access-token', this.authStorage.key)\n    });\n    let r = authReq.clone({url: this.base + req.url});\n    return next.handle(r);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/interceptors/ApiTokenInterceptor.ts","import {Inject, Injectable, Injector} from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\n\nimport {Observable} from 'rxjs/Observable';\nimport {AuthService} from \"../auth.service\";\n// import {AuthService} from \"../auth.service\";\n\n@Injectable()\nexport class AuthFailedInterceptor implements HttpInterceptor {\n  private authService: AuthService;\n  constructor(private inj: Injector){\n\n  }\n  intercept (req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.authService = this.inj.get(AuthService);\n    return next.handle(req).do((event: HttpEvent<any>) => {\n      if (event instanceof HttpResponse) {\n        console.log(event.body)\n      }\n    }, (err: any) => {\n      if (err instanceof HttpErrorResponse) {\n        if (err.status === 401) {\n          // redirect to the login route\n          // or show a modal\n          this.authService.authFailed.next(err)\n        }\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/interceptors/AuthFailedInterceptor.ts","import { Injectable } from '@angular/core';\n\n/*\n  Generated class for the InternetStatusProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class InternetStatusProvider {\n\n  constructor() {\n    console.log('Hello InternetStatusProvider Provider');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/internet-status/internet-status.ts","import { VehicleCategory } from './vehicle-category';\nimport { User } from './user';\n\n/**\n *\n * @export\n * @class Vehicle\n */\nexport class Vehicle {\n\n  /**\n   * Uniq identifier of the vehicle\n   *\n   * @type {string}\n   * @memberOf Vehicle\n   */\n  public id: string;\n\n  /**\n   * Number of the vehicle\n   *\n   * @type {string}\n   * @memberOf Vehicle\n   */\n  public num: string;\n\n  /**\n   * Category of the vehicle\n   *\n   * @type {VehicleCategory}\n   * @memberOf Vehicle\n   */\n  public type: VehicleCategory;\n\n  /**\n   * Plate number of the vehicle\n   *\n   * @type {string}\n   * @memberOf Vehicle\n   */\n  public plateNumber: string;\n\n  /**\n   * The number of people the car can contain (driver exclude)\n   *\n   * @type {number}\n   * @memberOf Vehicle\n   */\n  public nbPlace: number;\n\n  /**\n   * The driver of the vehicle\n   *\n   * @type {User}\n   * @memberOf Vehicle\n   */\n  public user: User;\n\n  /**\n   * Get the name of the vehicle\n   *\n   * @type {string}\n   * @memberOf Vehicle\n   */\n  public name: string;\n\n\n\n\n  /**\n   * Factory that uses json data for build Vehicle instance\n   *\n   * @static\n   * @param {*} data\n   * @returns {Vehicle}\n   *\n   * @memberOf Vehicle\n   */\n  static build(data: any): Vehicle {\n    if (!data) return null;\n\n    const v = new Vehicle;\n    v.id = data.id || data._id;\n    // v.num = data.num;\n    v.name = data.name;\n    v.type = VehicleCategory.build(data.type);\n    v.plateNumber = data.plate_number;\n    v.nbPlace = data.nb_place;\n    v.user = User.build(data.user);\n    return v;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/vehicle.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { User } from '../models/user';\nimport {HttpClient} from \"@angular/common/http\";\n\nexport { User };\n\n\n/**\n * Lets you to retrieve one user or the authenticated user.\n *\n * @export\n * @class UserService\n */\n@Injectable()\nexport class UserService {\n\n  constructor(private httpService: HttpClient) {}\n\n/**\n * Get one user\n *\n * @param {string} id Unique identifier of the user.\n * @returns {Observable<User>}\n *\n * @memberOf UserService\n */\n  get(id: string): Observable<User> {\n    return this.httpService\n      .get(`/users/${id}`)\n      .map(data => User.build(data))\n  }\n\n/**\n * Get the authenticated user\n *\n * @returns {Observable<User>}\n *\n * @memberOf UserService\n */\n  me(): Observable<User> {\n    return this.get('me');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/user.service.ts","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { UserService, User } from './user.service';\nimport { AuthStorage } from '../storages/auth.storage';\nimport { HttpClient } from \"@angular/common/http\";\n\n/**\n * Mangage the authentication logic.\n * Allows the user to log in and log out.\n *\n * @export\n * @class AuthService\n */\n@Injectable()\nexport class AuthService {\n\n  public loggedOut: Subject<any> = new Subject<any>();\n  public authFailed: Subject<any> = new Subject<any>();\n\n  constructor(private userService: UserService, private httpService: HttpClient, private authStorage: AuthStorage) {\n    // When httpService auth failed, disconnect user\n    this.authFailed.subscribe(() => this.logout());\n  }\n\n/**\n * Log in the user\n *\n * @param {string} key token user given by the administrator or qrcode.\n * @returns {Observable<User>}\n *\n * @memberOf AuthService\n */\n  login(key: string): Observable<User> {\n    this.authStorage.key = key;\n\n    return this.userService\n      .me()\n      .do(data => this.authStorage.user = User.build(data));\n  }\n\n/**\n * Log out the user and redirect automatically\n * @memberOf AuthService\n */\n  logout(): void {\n    this.authStorage.user = null;\n    this.authStorage.key = null;\n    this.redirect();\n  }\n\n  redirect(): void {\n    this.loggedOut.next();\n  }\n\n  /**\n   * The user is authenticated ?\n   * @readonly\n   * @type {boolean} return true if it is.\n   * @memberOf AuthService\n   */\n  get isAuthenticated(): boolean {\n    return !!this.authStorage.user;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/auth.service.ts"],"sourceRoot":""}